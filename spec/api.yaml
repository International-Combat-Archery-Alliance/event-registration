openapi: 3.0.0
info:
  title: ICAA Event Registration
  version: 1.0.0
  description: An API for managing events and signing up for events.
servers:
  - url: https://api.icaa.world/v1
    description: Production server
  - url: http://localhost:8080/v1
    description: Local dev server
paths:
  /events:
    get:
      summary: Get all events
      description: Retrieves a list of all events
      parameters:
        - name: cursor
          in: query
          description: Cursor of where to start from
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Max amount of events to fetch
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: A list of events.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - hasNextPage
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                  cursor:
                    type: string
                  hasNextPage:
                    type: boolean
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
        '500':
          description: Unknown server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new event
      description: Admin endpoint to create a new event
      requestBody:
        description: Event to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: The created event.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '500':
          description: Unknown server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /events/{id}:
    get:
      summary: Get an event
      description: Get one event by id
      parameters:
        - name: id
          in: path
          description: ID of the event
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
        '404':
          description: Event not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
        '500':
          description: Unknown server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Event:
      type: object
      required:
        - id
        - name
        - location
        - startTime
        - endTime
        - registrationCloseTime
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        registrationCloseTime:
          type: string
          format: date-time
    Location:
      type: object
      required:
        - name
        - address
      properties:
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    Address:
      type: object
      properties:
        street:
          type: string
          description: Street address
        city:
          type: string
          description: City or town
        state:
          type: string
          description: State or province
        postalCode:
          type: string
          description: Postal code
        country:
          type: string
          description: Country
      required:
        - street
        - city
        - state
        - postalCode
        - country
    ErrorCode:
      type: string
      enum:
        - InternalError
        - LimitOutOfBounds
        - InvalidCursor
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
